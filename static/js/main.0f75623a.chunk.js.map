{"version":3,"sources":["App.js","reportWebVitals.js","index.js","js/dragHandler.js"],"names":["App","className","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","dragItems","this","items","object","dI","dragItem","push","dragables","i","dragIs","newItem","index","e","console","log","dragStart","dragEnd","drag","parentNode","removeChild","shift","splice","refresh","refreshObject","refresID","length","active","isActive","color","pointerOffset","move","currentXY","getBoundingClientRect","left","top","size","offsetWidth","offsetHeight","type","touches","clientX","clientY","classList","add","remove","preventDefault","boundXY","clientWidth","clientHeight","Math","max","min","position","style","querySelectorAll","newItems","mousedown","body","getElementsByTagName","button","target","isAnyAcive","addEventListener","oncontextmenu","onclick","innerHTML","dragHandle"],"mappings":"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","file":"static/js/main.0f75623a.chunk.js","sourcesContent":["function App() {\n  return (\n    <div className=\"App\">\n      <div id=\"outerContainer\">\n            <div id=\"dragPalette\">\n                <div className=\"dragItem\" id=\"point_0\">\n                </div>\n            </div>\n            <div id=\"point-manager\">\n                <button className=\"button plus\"></button>\n                <button className=\"button minus\"></button>\n            </div>\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './css/style.css';\nimport './css/dragPalette.css';\nimport './css/pointManager.css';\nimport App from './App';\nimport dragHandle from './js/dragHandler';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\ndragHandle();","\r\nexport default function dragHandle(){\r\n    class dragItems {\r\n        constructor() {\r\n            this.items = [];\r\n        }\r\n        newItem(object) {\r\n            let dI = new dragItem(object);\r\n            this.items.push(dI);\r\n        }\r\n        newItems(dragables){\r\n            for (let i in dragables) {\r\n                if (dragables[i].className === \"dragItem\") {\r\n                    dragIs.newItem(dragables[i]);\r\n                }\r\n            }\r\n        }\r\n        dragStart(index, e) {\r\n            console.log(\"dragStart \" + index);\r\n            this.items[index].dragStart(e);\r\n        }\r\n        dragEnd(index, e) {\r\n            if (index === -1) {\r\n                for (let i in this.items) {\r\n                    this.items[i].dragEnd(e);\r\n                }\r\n            } else{\r\n                this.items[index].dragEnd(e);\r\n                console.log(\"dragEnd \" + index);\r\n            }\r\n        }\r\n        drag(index, e) {\r\n            if (index === -1) {\r\n                for (let i in this.items) {\r\n                    this.items[i].drag(e);\r\n                }\r\n            } else {\r\n                console.log(\"drag \" + index);\r\n                this.items[index].drag(e);\r\n            }\r\n        }\r\n        remove(index, e) {\r\n            if (index === -1) {\r\n                for (let i in this.items) {\r\n                    this.items[0].object.parentNode.removeChild(this.items[0].object);\r\n                    this.items.shift();\r\n                }\r\n            } else {\r\n                console.log(\"remove \" + index);\r\n                this.items[index].object.parentNode.removeChild(this.items[index].object);\r\n                dragIs.items.splice(index, 1);\r\n                dragIs.refresh();\r\n            }\r\n        }\r\n        deleteAll(){\r\n            for (let i in this.items){\r\n                this.items.shift();\r\n            }\r\n        }\r\n        refresh(){\r\n            // console.log(\"Before refresh\", this.items)\r\n            for (let i in this.items){\r\n                this.items[i].refreshObject();\r\n            }\r\n            // console.log(\"After refreshObject\", this.items)\r\n            for (let i in this.items){\r\n                this.items[i].object.id = \"point_\"+i;\r\n                this.items[i].refresID();\r\n            }\r\n            // console.log(\"After refresh\", this.items)\r\n        }\r\n        length(){\r\n            return this.items.length;\r\n        }\r\n        isAnyAcive(){\r\n            let active = false;\r\n            for (let i in this.items){\r\n                active = active || this.items[i].isActive(); \r\n            }\r\n            return active;\r\n        }\r\n    }\r\n    class dragItem {\r\n        // While not being dragged, [pointerOffset, currentXY, offset] stores the same value, the X and Y coordinate from the original position (0,0), (used in transform: translate3D(X, Y, 0))\r\n        // While being dragged, \r\n        //      pointerOffset[X, Y] stores the pointerOffset X and Y offset of the pointer to the anchor of dragItem\r\n        //      currentXY[X, Y] stores the total X and Y offsets from the pointerOffset position (0,0).\r\n        // After a drag event, all [pointerOffset, currentXY, offset] stores the same value, the X and Y coordinate from the original position (0,0); again. \r\n        constructor(object) {\r\n            this.object = object;\r\n            this.id = object.id;\r\n            this.active = false;\r\n            this.color = \"#000000\";\r\n            this.pointerOffset = [0, 0];\r\n            // this.currentXY = [0, 0];\r\n            this.move([50,50]);\r\n            // this.move([0,0]);\r\n            this.currentXY = [this.object.getBoundingClientRect().left, this.object.getBoundingClientRect().top];\r\n            // let boundXY = [[this.object.parentNode.getBoundingClientRect().left, this.object.parentNode.getBoundingClientRect().top],[0,0]];\r\n            // boundXY[1] = [boundXY[0][0] + this.object.parentNode.clientWidth, boundXY[0][1] + this.object.parentNode.clientHeight];\r\n            // console.log(\"bound\", boundXY);\r\n            // console.log(\"tiTu constructor \", this.object.getBoundingClientRect().left, this.object.getBoundingClientRect().top);\r\n            // console.log(\"tiTu constructor div size [\"+ this.object.parentNode.clientWidth+\", \"+ this.object.parentNode.clientWidth+\"]\")\r\n            // console.log(\"tiTu constructor div location [\"+ this.object.parentNode.getBoundingClientRect().left+\", \"+ this.object.parentNode.getBoundingClientRect().top+\"]\")\r\n            this.size = [this.object.offsetWidth, this.object.offsetHeight]\r\n            // console.log(\"tiTu constructor dot size [\"+ this.object.offsetWidth+\", \"+ this.object.offsetHeight +\"]\")\r\n        }\r\n        dragStart(e) {\r\n            if (e.type === \"touchstart\") {\r\n                this.pointerOffset[0] = e.touches[0].clientX - this.currentXY[0];\r\n                this.pointerOffset[1] = e.touches[0].clientY - this.currentXY[1];\r\n            } else {\r\n                this.pointerOffset[0] = e.clientX - this.currentXY[0];\r\n                this.pointerOffset[1] = e.clientY - this.currentXY[1];\r\n            }\r\n            // console.log(\"tiTu dragStart \", this.object.getBoundingClientRect().left, this.object.getBoundingClientRect().top);\r\n            // console.log(\"dragStart initX, initY = [\" + String([this.pointerOffset[0], this.pointerOffset[1]]) + \"]\");\r\n            this.active = true;\r\n            this.object.classList.add(\"active\")\r\n        }\r\n        dragEnd(e) {\r\n            this.pointerOffset[0] = this.currentXY[0];\r\n            this.pointerOffset[1] = this.currentXY[1];\r\n            // console.log(\"dragEnd initX, initY = [\" + String([this.pointerOffset[0], this.pointerOffset[1]]) + \"]\");\r\n            // console.log(\"tiTu dragEnd \", this.object.getBoundingClientRect().left, this.object.getBoundingClientRect().top);\r\n            // console.log(\"dragEnd [\" + String([this.currentXY[0], this.currentXY[1]]) + \"]\");\r\n            this.object.classList.remove(\"active\")\r\n            this.active = false;\r\n        }\r\n        drag(e) {\r\n            console.log(\"Trying to drag\")\r\n            if (this.active) {\r\n                // console.log(\"Focussing\", this.object);\r\n                // this.object.focus();\r\n                // console.log(\"Pushing    \")\r\n                e.preventDefault();\r\n\r\n                if (e.type === \"touchmove\") {\r\n                    this.currentXY[0] = e.touches[0].clientX - this.pointerOffset[0];\r\n                    this.currentXY[1] = e.touches[0].clientY - this.pointerOffset[1];\r\n                } else {\r\n                    this.currentXY[0] = e.clientX - this.pointerOffset[0];\r\n                    this.currentXY[1] = e.clientY - this.pointerOffset[1];\r\n                }\r\n                let boundXY = [[this.object.parentNode.getBoundingClientRect().left, this.object.parentNode.getBoundingClientRect().top],[0,0]];\r\n                boundXY[1] = [boundXY[0][0]+this.object.parentNode.clientWidth-this.size[0], boundXY[0][1]+this.object.parentNode.clientHeight-this.size[1]];\r\n                // console.log(boundXY);\r\n                this.currentXY[0] = Math.max(Math.min(this.currentXY[0], boundXY[1][0]), boundXY[0][0]);\r\n                this.currentXY[1] = Math.max(Math.min(this.currentXY[1], boundXY[1][1]), boundXY[0][1]);\r\n\r\n                // setTranslate(this.currentXY[0], this.currentXY[1], this.object);\r\n                this.move(this.currentXY);\r\n            }\r\n        }\r\n        refresID(){\r\n            this.id = this.object.id;\r\n        }\r\n        refreshObject(){\r\n            this.object = document.getElementById(this.id);\r\n        }\r\n        move(position){\r\n            // let rect = this.object.getBoundingClientRect;\r\n            // this.left = position[0];\r\n            // this.top = position[1];\r\n            console.log(\"tiTu move \"+position);\r\n            this.object.style.left = position[0]+'px';\r\n            this.object.style.top = position[1]+'px';\r\n        }\r\n        isActive(){\r\n            return this.active;\r\n        }\r\n        // remove(e) {\r\n        //     // this.object.style.visibility = \"hidden\";\r\n        //     // this.object.parentNode.style.display = \"block\";\r\n        //     // var contextMenuObj = document.getElementById(\"ctxMenu\");\r\n        //     // console.log(contextMenuObj);\r\n        //     // contextMenuObj.close();\r\n        //     // this.object.parentNode.removeChild(this.object);\r\n        //     // dragIs.items.splice(index, 1);\r\n        // }\r\n    }\r\n    var dragIs = new dragItems();\r\n    var dragables = document.querySelectorAll(\"#dragPalette > .dragItem\");\r\n    console.log(dragables);\r\n    dragIs.newItems(dragables);\r\n    console.log(dragIs.items)\r\n    var mousedown = false;\r\n    // var dragPalette = document.querySelector(\"#outerContainer\");\r\n    var body = document.getElementsByTagName(\"body\")[0];\r\n\r\n    handleEvents();\r\n\r\n    function handleEvents(){\r\n        body.addEventListener(\"touchstart\", dragStart, false);\r\n        body.addEventListener(\"touchend\", dragEnd, false);\r\n        body.addEventListener(\"touchmove\", drag, false);\r\n\r\n        body.addEventListener(\"mousedown\", dragStart, false);\r\n        body.addEventListener(\"mouseup\", dragEnd, false);\r\n        body.addEventListener(\"mousemove\", drag, false);\r\n    }\r\n    document.oncontextmenu = function (e) {\r\n        // console.log(\"Context menu on \", e.target);\r\n        // if (e.target === document.getElementById(\"dragPalette\")) {\r\n        //     console.log(\"Hi tandu\");\r\n        //     for (let i in dragables) {\r\n        //         try {\r\n        //             dragables[i].style.visibility = \"visible\";\r\n        //             }\r\n        //         catch (exception_var) {}\r\n        //     }\r\n        // }\r\n        return false;\r\n    }\r\n    document.querySelectorAll(\".button.plus\")[0].onclick = function () {\r\n        console.log(\"Plus clicked by tC\")\r\n\r\n        document.getElementById(\"dragPalette\").innerHTML += \"<div class=\\\"dragItem\\\" id=\\\"point_\"+dragIs.length()+\"\\\">\\n</div>\";\r\n\r\n        dragables = document.querySelectorAll(\"#dragPalette > .dragItem\");\r\n        dragIs.newItem(dragables[dragables.length - 1]);\r\n\r\n        dragIs.refresh();\r\n    }\r\n    document.querySelectorAll(\".button.minus\")[0].onclick = function () {\r\n        console.log(\"Minus clicked by tT\")\r\n        \r\n        dragables = document.querySelectorAll(\"#dragPalette > .dragItem\");\r\n        if(dragIs.items.length){\r\n            dragIs.remove([dragIs.items.length - 1]); dragIs.refresh();\r\n        }else{\r\n            console.log(\"tT yit yees empty\")\r\n        }\r\n    }\r\n    function dragStart(e) {\r\n        mousedown = true;\r\n        if (e.button === 2) {\r\n            console.log(\"Right click on \", e.target);\r\n            for (let i in dragIs.items) {\r\n                // console.log(i, dragIs.items[i].object)\r\n                if (e.target === dragIs.items[i].object) {\r\n                    dragIs.remove(i, e);\r\n                }\r\n            }\r\n        } else {\r\n            // console.log(\"dragStart on \", e.target);\r\n            for (let i in dragIs.items) {\r\n                // console.log(i, dragIs.items[i].object)\r\n                if (e.target === dragIs.items[i].object) {\r\n                    // console.log(\"Yes, \"+i, dragIs.items[i].object)\r\n                    dragIs.dragStart(i, e);\r\n                }\r\n            }\r\n        }    \r\n        // console.log(dragIs.items)\r\n    }\r\n    function dragEnd(e) {\r\n        mousedown = false;\r\n        console.log(dragIs.items)\r\n        // for (let i in dragIs.items) {\r\n        //     if (e.target === dragIs.items[i].object) {\r\n        //         dragIs.dragEnd(i, e);\r\n        //     }\r\n        // }\r\n        dragIs.dragEnd(-1, e);\r\n    }\r\n    function drag(e) {\r\n        if (dragIs.isAnyAcive()){\r\n            console.log(\"tiTu\")\r\n            dragIs.drag(-1, e);\r\n        }else if(mousedown){\r\n            dragStart(e);\r\n        }\r\n    }\r\n    function setTranslate(xPos, yPos, el) {\r\n        el.style.transform = \"translate3d(\" + xPos + \"px, \" + yPos + \"px, 0)\";\r\n    }\r\n}\r\n\r\n// colorjoe.rgb('picker', '#113c38', [\r\n//     'currentColor',\r\n//     ['fields', {space: 'RGB', limit: 255, fix: 0}],\r\n//     ['fields', {space: 'HSL', limit: 100}],\r\n//     'hex'\r\n// ]);"],"sourceRoot":""}