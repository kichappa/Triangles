{"version":3,"sources":["components/Point.js","components/Points.js","js/webglUtils.js","js/gradientRenderer.js","components/Canvas.js","App.js","reportWebVitals.js","index.js"],"names":["Point","colour","points","onChangeColor","index","onPickerButton","hex","styles","reactCSS","default","container","left","currentXY","x","top","y","pointContainer","display","justifyContent","alignItems","height","width","flexWrap","point_unclicked","backgroundColor","tags","showRadius","point_clicked","radius","transition","resizing","pickerButton","clicked","fontSize","transform","color","pickerBar","position","pointRef","useRef","containerRef","className","style","ref","onClick","e","id","active","tabIndex","showPicker","onChange","onChangeComplete","disableAlpha","presetColors","defaultProps","Points","onRender","useEffect","i","push","WebGLDebugUtil","require","error","msg","console","log","errorRE","addLineNumbersWithError","src","matches","matchAll","lineNoToErrorMap","Map","map","m","ndx","lineNo","parseInt","next","end","length","substring","split","line","err","get","join","loadShader","gl","shaderSource","shaderType","opt_errorCallback","errFn","shader","createShader","compileShader","getShaderParameter","COMPILE_STATUS","lastError","getShaderInfoLog","deleteShader","createProgram","shaders","opt_attribs","opt_locations","program","forEach","attachShader","attrib","bindAttribLocation","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","getShaderSource","type","SHADER_TYPE","glEnumToString","deleteProgram","defaultShaderType","createProgramFromSources","shaderSources","ii","renderGradient","canvas","getContext","offsetWidth","offsetHeight","locations","getAttribLocation","resolution","getUniformLocation","pointsRadius","pointsXY","pointsRGB","pointsHSV","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","positions","bufferData","Float32Array","STATIC_DRAW","vao","createVertexArray","bindVertexArray","enableVertexAttribArray","FLOAT","offset","vertexAttribPointer","multiplier","clientWidth","clientHeight","resizeCanvasToDisplaySize","viewport","useProgram","rgb","r","g","b","hsv","h","s","v","uniform1fv","flat","uniform2iv","uniform3fv","uniform2f","primType","TRIANGLES","count","drawArrays","worker","window","Worker","Canvas","canvasPoints","useState","setPoints","draw","imageData","current","putImageData","requestAnimationFrame","shootPixel","createImageData","imDataLength","data","terminate","postMessage","onerror","onmessage","alert","App","initDragIs","potChange","setPotChange","renderPage","setRenderPage","location","origin","url","setUrl","useLocation","down","stateSaved","status","undefined","obj","mode","start","target","initialPosition","initialRadius","pos","middle","getXY","from","this","mouse","setMouse","view","setView","undo","setUndo","redo","setRedo","undoRedo","setUndoRedo","rgbToHslHsvHex","M","C","hue","V","L","rgbArr","Math","max","min","a","hsl","abs","l","colorcode","floor","toString","repeat","defaultColour","random","paramsHash","URLSearchParams","search","params","entries","pair","JSON","parse","size","containerSize","dragIs","setDragIs","hsvRgbObjToArr","arr","getCanvasPoints","set","Array","centre","pointCentre","colourArr","setCanvasPoints","dragStart","getPointerLocation","document","elementFromPoint","getIndex","classList","contains","hideButton","init","zIndex","substr","touches","clientX","clientY","state","timeout","animTime","setTimeout","undoButton","getElementsByClassName","k","add","remove","getBounds","boundXY","parentNode","closePoint","pushNewURL","url_query","stringify","removeDOMItems","history","pushState","replaceState","dist","p1","p2","sqrt","pow","isClick","startXY","endXY","pushToView","dontCopyToRedo","newView","copyDragIs","differentState","newState","oldState","minimalState","item","undoRedoClicked","action","slice","onPointerDown","onPointerMove","preventDefault","drag","onPointerUp","dragEnd","update","finish","newDragIs","newDragItem","pointerOffset","splice","removeDragItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cfa76684.chunk.js","sourcesContent":["import React from \"react\";\r\nimport reactCSS from \"reactcss\";\r\nimport { useRef } from \"react\";\r\nimport { SketchPicker } from \"react-color\";\r\nimport { FaTint } from \"react-icons/fa\";\r\n\r\nconst Point = ({ points, onChangeColor, index, onPickerButton }) => {\r\n    var colour;\r\n    if (points[index].colour.hex) {\r\n        colour = points[index].colour.hex;\r\n    } else {\r\n        colour = points[index].colour;\r\n    }\r\n    const styles = reactCSS({\r\n        default: {\r\n            container: {\r\n                left: points[index].currentXY.x,\r\n                top: points[index].currentXY.y,\r\n            },\r\n            pointContainer: {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"36px\",\r\n                width: \"36px\",\r\n                flexWrap: \"nowrap\",\r\n            },\r\n            point_unclicked: {\r\n                backgroundColor: points[index].tags?.showRadius\r\n                    ? colour\r\n                    : \"#FFFFFF00\",\r\n            },\r\n            point_clicked: { backgroundColor: colour },\r\n            radius: {\r\n                width: points[index].tags?.showRadius\r\n                    ? 2 * points[index].radius + 50 + \"px\"\r\n                    : \"0px\",\r\n                height: points[index].tags?.showRadius\r\n                    ? 2 * points[index].radius + 50 + \"px\"\r\n                    : \"0px\",\r\n                transition: points[index].tags?.resizing\r\n                    ? `all 0s cubic-bezier(0.52, -1.01, ${1 - 0.52}, ${\r\n                          1 + 1.01\r\n                      }) 0s`\r\n                    : `all 0.3s cubic-bezier(0.52, -1.01, ${1 - 0.52}, ${\r\n                          1 + 1.01\r\n                      }) 0s`,\r\n            },\r\n            pickerButton: {\r\n                width: points[index].tags?.clicked ? 30 + \"px\" : \"0px\",\r\n                height: points[index].tags?.clicked ? 30 + \"px\" : \"0px\",\r\n                fontSize: points[index].tags?.clicked ? 30 / 2.5 + \"pt\" : \"0pt\",\r\n                transform: points[index].tags?.clicked\r\n                    ? points[index].tags?.showRadius\r\n                        ? `translate(-50%, calc(-40px - ${\r\n                              points[index].radius + 25\r\n                          }px))`\r\n                        : `translate(-50%, -60px)`\r\n                    : \"translate(-50%, -50%)\",\r\n                transition: points[index].tags?.resizing\r\n                    ? `all 0s cubic-bezier(0.52, -1.01, ${1 - 0.52}, ${\r\n                          1 + 1.01\r\n                      }) 0s, color 0s`\r\n                    : `all 0.3s cubic-bezier(0.52, -1.01, ${1 - 0.52}, ${\r\n                          1 + 1.01\r\n                      }) 0s, color 0s`,\r\n                color: colour,\r\n            },\r\n            pickerBar: {\r\n                position: \"fixed\",\r\n                transform: `translate(calc(-50% + 18px), calc(2px+${\r\n                    points[index].radius + 25\r\n                }))`,\r\n            },\r\n        },\r\n    });\r\n    points[index].pointRef = useRef();\r\n    points[index].containerRef = useRef();\r\n    return (\r\n        <div\r\n            className=\"dragIContainer\"\r\n            style={styles.container}\r\n            ref={points[index].containerRef}\r\n        >\r\n            {/* point container */}\r\n            <div style={styles.pointContainer}>\r\n                <div>\r\n                    <div\r\n                        className=\"dragColor\"\r\n                        style={styles.pickerButton}\r\n                        onClick={(e) => onPickerButton(index)}\r\n                    >\r\n                        <FaTint />\r\n                    </div>\r\n                    <div\r\n                        style={styles.radius}\r\n                        className=\"dragIWeight\"\r\n                        id={points[index].id}\r\n                    />\r\n                    <div\r\n                        ref={points[index].pointRef}\r\n                        style={styles.point_unclicked}\r\n                        className={\r\n                            \"dragItem\" +\r\n                            (points[index].tags &&\r\n                            (points[index].tags.active ||\r\n                                points[index].tags.clicked)\r\n                                ? \" active\"\r\n                                : \"\")\r\n                        }\r\n                        tabIndex={1}\r\n                        id={points[index].id}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {/* Color picker */}\r\n            {points[index].tags && points[index].tags.showPicker && (\r\n                <SketchPicker\r\n                    style={styles.pickerBar}\r\n                    color={colour}\r\n                    onChange={(color) => onChangeColor(index, color, false)}\r\n                    onChangeComplete={(color) =>\r\n                        onChangeColor(index, color, true)\r\n                    }\r\n                    disableAlpha={true}\r\n                    presetColors={[]}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\nPoint.defaultProps = {\r\n    className: \"dragItem\",\r\n};\r\n\r\nexport default Point;\r\n","import React from \"react\";\r\nimport Point from \"./Point\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst Points = ({ points, onChangeColor, onRender, onPickerButton }) => {\r\n    useEffect(() => {\r\n        onRender();\r\n    });\r\n    var Points = [];\r\n    for (let i in points) {\r\n        Points.push(\r\n            <Point\r\n                points={points}\r\n                index={i}\r\n                onChangeColor={onChangeColor}\r\n                onPickerButton={onPickerButton}\r\n            />\r\n        );\r\n    }\r\n    return Points;\r\n};\r\n\r\nexport default Points;\r\n","/*\r\n * Copyright 2021, GFXFundamentals.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions are\r\n * met:\r\n *\r\n *     * Redistributions of source code must retain the above copyright\r\n * notice, this list of conditions and the following disclaimer.\r\n *     * Redistributions in binary form must reproduce the above\r\n * copyright notice, this list of conditions and the following disclaimer\r\n * in the documentation and/or other materials provided with the\r\n * distribution.\r\n *     * Neither the name of GFXFundamentals. nor the names of his\r\n * contributors may be used to endorse or promote products derived from\r\n * this software without specific prior written permission.\r\n *\r\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\r\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\r\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\r\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\r\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\r\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nvar WebGLDebugUtil = require(\"webgl-debug\");\r\n\r\n/* global define */\r\n\r\n/**\r\n * Wrapped logging function.\r\n * @param {string} msg The message to log.\r\n */\r\nfunction error(msg) {\r\n    if (console) {\r\n        if (console.error) {\r\n            console.error(msg);\r\n        } else if (console.log) {\r\n            console.log(msg);\r\n        }\r\n    }\r\n}\r\n\r\nconst errorRE = /ERROR:\\s*\\d+:(\\d+)/gi;\r\nfunction addLineNumbersWithError(src, log = \"\") {\r\n    // Note: Error message formats are not defined by any spec so this may or may not work.\r\n    const matches = [...log.matchAll(errorRE)];\r\n    const lineNoToErrorMap = new Map(\r\n        matches.map((m, ndx) => {\r\n            const lineNo = parseInt(m[1]);\r\n            const next = matches[ndx + 1];\r\n            const end = next ? next.index : log.length;\r\n            const msg = log.substring(m.index, end);\r\n            return [lineNo - 1, msg];\r\n        })\r\n    );\r\n    return src\r\n        .split(\"\\n\")\r\n        .map((line, lineNo) => {\r\n            const err = lineNoToErrorMap.get(lineNo);\r\n            return `${lineNo + 1}: ${line}${err ? `\\n\\n^^^ ${err}` : \"\"}`;\r\n        })\r\n        .join(\"\\n\");\r\n}\r\n\r\n/**\r\n * Error Callback\r\n * @callback ErrorCallback\r\n * @param {string} msg error message.\r\n * @memberOf module:webgl-utils\r\n */\r\n\r\n/**\r\n * Loads a shader.\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\r\n * @param {string} shaderSource The shader source.\r\n * @param {number} shaderType The type of shader.\r\n * @param {module:webgl-utils.ErrorCallback} opt_errorCallback callback for errors.\r\n * @return {WebGLShader} The created shader.\r\n */\r\nfunction loadShader(gl, shaderSource, shaderType, opt_errorCallback) {\r\n    const errFn = opt_errorCallback || error;\r\n    // Create the shader object\r\n    const shader = gl.createShader(shaderType);\r\n\r\n    // Load the shader source\r\n    gl.shaderSource(shader, shaderSource);\r\n\r\n    // Compile the shader\r\n    gl.compileShader(shader);\r\n\r\n    // Check the compile status\r\n    const compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\r\n    if (!compiled) {\r\n        // Something went wrong during compilation; get the error\r\n        const lastError = gl.getShaderInfoLog(shader);\r\n        errFn(\r\n            `Error compiling shader: ${lastError}\\n${addLineNumbersWithError(\r\n                shaderSource,\r\n                lastError\r\n            )}`\r\n        );\r\n        gl.deleteShader(shader);\r\n        return null;\r\n    }\r\n\r\n    return shader;\r\n}\r\n\r\n/**\r\n * Creates a program, attaches shaders, binds attrib locations, links the\r\n * program and calls useProgram.\r\n * @param {WebGLShader[]} shaders The shaders to attach\r\n * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\r\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\r\n * @param {module:webgl-utils.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\r\n *        on error. If you want something else pass an callback. It's passed an error message.\r\n * @memberOf module:webgl-utils\r\n */\r\nfunction createProgram(\r\n    gl,\r\n    shaders,\r\n    opt_attribs,\r\n    opt_locations,\r\n    opt_errorCallback\r\n) {\r\n    const errFn = opt_errorCallback || error;\r\n    const program = gl.createProgram();\r\n    shaders.forEach(function (shader) {\r\n        gl.attachShader(program, shader);\r\n    });\r\n    if (opt_attribs) {\r\n        opt_attribs.forEach(function (attrib, ndx) {\r\n            gl.bindAttribLocation(\r\n                program,\r\n                opt_locations ? opt_locations[ndx] : ndx,\r\n                attrib\r\n            );\r\n        });\r\n    }\r\n    gl.linkProgram(program);\r\n\r\n    // Check the link status\r\n    const linked = gl.getProgramParameter(program, gl.LINK_STATUS);\r\n    if (!linked) {\r\n        // something went wrong with the link\r\n        const lastError = gl.getProgramInfoLog(program);\r\n        errFn(\r\n            `Error in program linking: ${lastError}\\n${shaders\r\n                .map((shader) => {\r\n                    const src = addLineNumbersWithError(\r\n                        gl.getShaderSource(shader)\r\n                    );\r\n                    const type = gl.getShaderParameter(shader, gl.SHADER_TYPE);\r\n                    return `${WebGLDebugUtil.glEnumToString(\r\n                        gl,\r\n                        type\r\n                    )}:\\n${src}`;\r\n                })\r\n                .join(\"\\n\")}`\r\n        );\r\n\r\n        gl.deleteProgram(program);\r\n        return null;\r\n    }\r\n    return program;\r\n}\r\n\r\n/**\r\n * Loads a shader from a script tag.\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext to use.\r\n * @param {string} scriptId The id of the script tag.\r\n * @param {number} opt_shaderType The type of shader. If not passed in it will\r\n *     be derived from the type of the script tag.\r\n * @param {module:webgl-utils.ErrorCallback} opt_errorCallback callback for errors.\r\n * @return {WebGLShader} The created shader.\r\n */\r\nfunction createShaderFromScript(\r\n    gl,\r\n    scriptId,\r\n    opt_shaderType,\r\n    opt_errorCallback\r\n) {\r\n    let shaderSource = \"\";\r\n    let shaderType;\r\n    const shaderScript = document.getElementById(scriptId);\r\n    if (!shaderScript) {\r\n        throw \"*** Error: unknown script element\" + scriptId;\r\n    }\r\n    shaderSource = shaderScript.text;\r\n\r\n    if (!opt_shaderType) {\r\n        if (shaderScript.type === \"x-shader/x-vertex\") {\r\n            shaderType = gl.VERTEX_SHADER;\r\n        } else if (shaderScript.type === \"x-shader/x-fragment\") {\r\n            shaderType = gl.FRAGMENT_SHADER;\r\n        } else if (\r\n            shaderType !== gl.VERTEX_SHADER &&\r\n            shaderType !== gl.FRAGMENT_SHADER\r\n        ) {\r\n            throw \"*** Error: unknown shader type\";\r\n        }\r\n    }\r\n\r\n    return loadShader(\r\n        gl,\r\n        shaderSource,\r\n        opt_shaderType ? opt_shaderType : shaderType,\r\n        opt_errorCallback\r\n    );\r\n}\r\n\r\nconst defaultShaderType = [\"VERTEX_SHADER\", \"FRAGMENT_SHADER\"];\r\n\r\n/**\r\n * Creates a program from 2 script tags.\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\r\n *        to use.\r\n * @param {string[]} shaderScriptIds Array of ids of the script\r\n *        tags for the shaders. The first is assumed to be the\r\n *        vertex shader, the second the fragment shader.\r\n * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\r\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\r\n * @param {module:webgl-utils.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\r\n *        on error. If you want something else pass an callback. It's passed an error message.\r\n * @return {WebGLProgram} The created program.\r\n * @memberOf module:webgl-utils\r\n */\r\nfunction createProgramFromScripts(\r\n    gl,\r\n    shaderScriptIds,\r\n    opt_attribs,\r\n    opt_locations,\r\n    opt_errorCallback\r\n) {\r\n    const shaders = [];\r\n    for (let ii = 0; ii < shaderScriptIds.length; ++ii) {\r\n        shaders.push(\r\n            createShaderFromScript(\r\n                gl,\r\n                shaderScriptIds[ii],\r\n                gl[defaultShaderType[ii]],\r\n                opt_errorCallback\r\n            )\r\n        );\r\n    }\r\n    return createProgram(\r\n        gl,\r\n        shaders,\r\n        opt_attribs,\r\n        opt_locations,\r\n        opt_errorCallback\r\n    );\r\n}\r\n\r\n/**\r\n * Creates a program from 2 sources.\r\n *\r\n * @param {WebGLRenderingContext} gl The WebGLRenderingContext\r\n *        to use.\r\n * @param {string[]} shaderSourcess Array of sources for the\r\n *        shaders. The first is assumed to be the vertex shader,\r\n *        the second the fragment shader.\r\n * @param {string[]} [opt_attribs] An array of attribs names. Locations will be assigned by index if not passed in\r\n * @param {number[]} [opt_locations] The locations for the. A parallel array to opt_attribs letting you assign locations.\r\n * @param {module:webgl-utils.ErrorCallback} opt_errorCallback callback for errors. By default it just prints an error to the console\r\n *        on error. If you want something else pass an callback. It's passed an error message.\r\n * @return {WebGLProgram} The created program.\r\n * @memberOf module:webgl-utils\r\n */\r\nfunction createProgramFromSources(\r\n    gl,\r\n    shaderSources,\r\n    opt_attribs,\r\n    opt_locations,\r\n    opt_errorCallback\r\n) {\r\n    const shaders = [];\r\n    for (let ii = 0; ii < shaderSources.length; ++ii) {\r\n        shaders.push(\r\n            loadShader(\r\n                gl,\r\n                shaderSources[ii],\r\n                gl[defaultShaderType[ii]],\r\n                opt_errorCallback\r\n            )\r\n        );\r\n    }\r\n    // console.log({ shaderSources, shaders });\r\n    return createProgram(\r\n        gl,\r\n        shaders,\r\n        opt_attribs,\r\n        opt_locations,\r\n        opt_errorCallback\r\n    );\r\n}\r\n\r\n/**\r\n * Resize a canvas to match the size its displayed.\r\n * @param {HTMLCanvasElement} canvas The canvas to resize.\r\n * @param {number} [multiplier] amount to multiply by.\r\n *    Pass in window.devicePixelRatio for native pixels.\r\n * @return {boolean} true if the canvas was resized.\r\n * @memberOf module:webgl-utils\r\n */\r\nfunction resizeCanvasToDisplaySize(canvas, multiplier) {\r\n    multiplier = multiplier || 1;\r\n    const width = (canvas.clientWidth * multiplier) | 0;\r\n    const height = (canvas.clientHeight * multiplier) | 0;\r\n    if (canvas.width !== width || canvas.height !== height) {\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport { resizeCanvasToDisplaySize };\r\nexport default createProgramFromSources;\r\n","// importing boilerplate functions\r\nimport createProgramFromSources, {\r\n    resizeCanvasToDisplaySize,\r\n} from \"../js/webglUtils\";\r\n// vertex shader function that is just a function to accompany the fragment shader\r\nconst getVertexShader = () => {\r\n    const vs = `#version 300 es\r\n    in vec2 a_position;\r\n\r\n    uniform vec2 u_resolution;\r\n\r\n    out vec2 v_position;\r\n\r\n    void main(){\r\n        gl_Position = vec4(a_position/u_resolution * 2.0 - 1.0, 0, 1);\r\n        v_position = vec2(a_position.x, u_resolution.y-a_position.y);\r\n    }\r\n    `;\r\n    return vs;\r\n};\r\n// fragment shader function that returns FS with the number of points embedded in the source (length)\r\nconst getFragmentShader = (length) => {\r\n    const fs = `#version 300 es\r\n    precision highp float;\r\n\r\n    in vec2 v_position;\r\n\r\n    uniform vec2 u_resolution;\r\n    uniform ivec2 pointsXY[${length}];\r\n    uniform float pointsRadius[${length}];\r\n    uniform vec3 pointsRGB[${length}];\r\n    uniform vec3 pointsHSV[${length}];\r\n\r\n    out vec4 outColor;\r\n\r\n    vec2 minMax(vec3 rgb){\r\n        vec2 mM = vec2(rgb[0], rgb[0]);\r\n        for(int i=1;i<3;i++){\r\n            if (rgb[i] < mM[0])\r\n                mM[0] = rgb[i];\r\n            if (rgb[i] > mM[1])\r\n                mM[1] = rgb[i];\r\n        }\r\n        return mM;\r\n    }\r\n\r\n    vec3 rgbToHsv(vec3 rgb){\r\n        float hue=0.0, C, V, Sv;\r\n        vec2 mM = minMax(rgb);\r\n        C = mM[1] - mM[0];\r\n        if(C==0.0){\r\n        }else if(mM[1]==rgb[0]){\r\n            hue = mod((rgb[1] - rgb[2]) / C, 6.0);\r\n        }else if(mM[1]==rgb[1]){\r\n            hue =     (rgb[2] - rgb[0]) / C + 2.0;\r\n        }else if(mM[1]==rgb[2]){\r\n            hue =     (rgb[0] - rgb[1]) / C + 4.0;\r\n        }\r\n        hue = mod((mod(hue * 60.0, 360.0) + 360.0), 360.0);\r\n\r\n        \r\n        V = mM[1];\r\n        if(V==0.0) Sv = 0.0;\r\n        else Sv = C/(V);\r\n\r\n        return vec3(hue, Sv, V);\r\n    }\r\n\r\n    float f(int n, vec3 hsv){\r\n        float k;\r\n        k = mod((float(n) + hsv[0] / 60.0), 6.0);\r\n        float fOut=hsv[2] - hsv[2] * hsv[1] * max(0.0, min(min(k, 4.0 - k), 1.0));\r\n        return fOut;\r\n    }\r\n\r\n    vec3 hsvToRgb(vec3 hsv){\r\n        vec3 rgb = vec3(f(5,hsv), f(3,hsv), f(1,hsv));\r\n        return rgb;\r\n    }\r\n\r\n    float dist(ivec2 pos, ivec2 point){\r\n        return pow(pow(float(pos.x-point.x), 2.0)+pow(float(pos.y-point.y), 2.0), 0.5);\r\n    }\r\n\r\n    void main(){\r\n        // ivec2 position = ivec2((v_position + 1.0) / 2.0 * u_resolution);\r\n        ivec2 position = ivec2(v_position);\r\n        float invSum = 0.0;\r\n        vec3 hsv = vec3(0,0,0), rgb = vec3(0,0,0);\r\n        int pointCentre = -1;\r\n        for(int i=0;i<${length};i++){\r\n            float d = dist(pointsXY[i], position);\r\n            if(abs(d)>0.0000001){\r\n                float invD = pow((1.0+pointsRadius[i]/10.0)/d, 3.0);\r\n                hsv += invD * pointsHSV[i];\r\n                rgb += invD * pointsRGB[i];\r\n                invSum += invD;\r\n            }else{\r\n                pointCentre=i;\r\n            }\r\n        }\r\n        if(pointCentre == -1){\r\n            hsv = hsv/invSum;\r\n            rgb = rgb/invSum;\r\n            // outColor = vec4(rgb, 1);\r\n            vec3 rgbInHsv = rgbToHsv(rgb);\r\n            // outColor = vec4(rgb, 1);\r\n            hsv[0] = rgbInHsv[0];\r\n            // hsv[1] = (1.25*rgbInHsv[1]+0.75*hsv[1])/2.0;\r\n            // hsv[1] = (2.0*rgbInHsv[1]+0.0*hsv[1])/2.0;\r\n            hsv[1] = rgbInHsv[1];\r\n            hsv[2] = (1.75*rgbInHsv[2]+0.25*hsv[2])/2.0;\r\n            // hsv[2]=0.5;\r\n            outColor = vec4(hsvToRgb(hsv),1);\r\n            // outColor = vec4(rgb,1);\r\n            // outColor = vec4(hsv,1);\r\n            // outColor = vec4(hsv[0]/360.0, hsv[1], hsv[2], 1);\r\n            // outColor = vec4(rgbInHsv[0]/360.0, rgbInHsv[1], rgbInHsv[2], 1);\r\n        }else{\r\n            hsv = pointsHSV[pointCentre];\r\n            rgb = pointsRGB[pointCentre];\r\n            outColor = vec4(rgb, 1);\r\n        }\r\n    }\r\n\r\n    `;\r\n    return fs;\r\n};\r\nconst renderGradient = (points, canvas) => {\r\n    if (points && points.length > 0) {\r\n        // accessing WebGL2 context from canvas\r\n        const gl = canvas.getContext(\"webgl2\");\r\n\r\n        // resizing canvas context to canvas width set by CSS\r\n        canvas.width = canvas.offsetWidth * 1;\r\n        canvas.height = canvas.offsetHeight * 1;\r\n\r\n        // creating program using the vs and fs functions above\r\n        const program = createProgramFromSources(gl, [\r\n            getVertexShader(),\r\n            getFragmentShader(points.length),\r\n        ]);\r\n\r\n        // storing locations of attributes and uniforms (state variables)\r\n        const locations = {\r\n            position: gl.getAttribLocation(program, \"a_position\"),\r\n            resolution: gl.getUniformLocation(program, \"u_resolution\"),\r\n            pointsRadius: gl.getUniformLocation(program, \"pointsRadius\"),\r\n            pointsXY: gl.getUniformLocation(program, \"pointsXY\"),\r\n            pointsRGB: gl.getUniformLocation(program, \"pointsRGB\"),\r\n            pointsHSV: gl.getUniformLocation(program, \"pointsHSV\"),\r\n        };\r\n\r\n        // creating a position buffer to load the entire clipspace into webgl buffer\r\n        var positionBuffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n\r\n        // clipspace is formed using two (anticlockwise) triangles\r\n        // prettier-ignore\r\n        var positions = [\r\n                   0, canvas.height, \r\n        canvas.width, 0, \r\n        canvas.width, canvas.height, \r\n                   0, 0, \r\n        canvas.width, 0, \r\n                   0, canvas.height\r\n    ];\r\n        // loading positions array to graphics buffer\r\n        gl.bufferData(\r\n            gl.ARRAY_BUFFER,\r\n            new Float32Array(positions),\r\n            gl.STATIC_DRAW\r\n        );\r\n\r\n        // creating vertex array object that will attach the positionBuffer to the attributes\r\n        var vao = gl.createVertexArray();\r\n        // binding current vertex array to vao\r\n        gl.bindVertexArray(vao);\r\n        // connecting vao to a_position attribute\r\n        gl.enableVertexAttribArray(locations.position);\r\n        // Tell the attribute how to get data out of positionBuffer (ARRAY_BUFFER)\r\n        var size = 2; // 2 components per iteration (x, y)\r\n        var type = gl.FLOAT; // the data is 32bit floats\r\n        var normalize = false; // don't normalize the data\r\n        var stride = 0; // 0 = move forward size * sizeof(type) each iteration to get the next position (consecutive elemets)\r\n        var offset = 0; // start at the beginning of the buffer\r\n        // attach vao to the current ARRAY_BUFFER (positionBuffer) and pass instructions on how to interpret the data\r\n        gl.vertexAttribPointer(\r\n            locations.position,\r\n            size,\r\n            type,\r\n            normalize,\r\n            stride,\r\n            offset\r\n        );\r\n\r\n        // resizing canvas to fit the fill clipspace - not sure why since we already did canvas.width = offsetWidth and all...\r\n        resizeCanvasToDisplaySize(gl.canvas);\r\n        gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\r\n\r\n        // Telling WebGL to use our program (with the pair of shaders)\r\n        gl.useProgram(program);\r\n\r\n        // generating arrays that will be sent to uniforms\r\n        const pointsRadius = points.map(({ radius }) => {\r\n            return radius;\r\n        });\r\n        // console.log(pointsRadius.flat());\r\n        const pointsXY = points.map(({ x, y }) => {\r\n            return [x, y];\r\n        });\r\n        const pointsRGB = points.map(({ colour }) => {\r\n            return [colour.rgb.r / 255, colour.rgb.g / 255, colour.rgb.b / 255];\r\n        });\r\n        const pointsHSV = points.map(({ colour }) => {\r\n            return [colour.hsv.h / 360, colour.hsv.s, colour.hsv.v];\r\n        });\r\n        // setting uniforms\r\n        gl.uniform1fv(locations.pointsRadius, pointsRadius.flat());\r\n        gl.uniform2iv(locations.pointsXY, pointsXY.flat());\r\n        gl.uniform3fv(locations.pointsRGB, pointsRGB.flat());\r\n        gl.uniform3fv(locations.pointsHSV, pointsHSV.flat());\r\n        gl.uniform2f(locations.resolution, canvas.width, canvas.height);\r\n\r\n        // drawwwww\r\n        var primType = gl.TRIANGLES;\r\n        offset = 0;\r\n        var count = positions.length / size;\r\n        gl.drawArrays(primType, offset, count);\r\n        // requestAnimationFrame(renderGradient);\r\n\r\n        // // simply reading the data\r\n        // var results = new Uint8Array(canvas.width * canvas.height * 4);\r\n        // gl.readPixels(\r\n        //     0,\r\n        //     0,\r\n        //     canvas.width,\r\n        //     canvas.height,\r\n        //     gl.RGBA,\r\n        //     gl.UNSIGNED_BYTE,\r\n        //     results\r\n        // );\r\n        // var resultsB = [];\r\n        // // for (let i = 0; i < canvas.width * canvas.height; i++) {\r\n        // //     resultsB.push({\r\n        // //         r: results[4 * i],\r\n        // //         g: results[4 * i + 1],\r\n        // //         b: results[4 * i + 2],\r\n        // //         a: results[4 * i + 3],\r\n        // //     });\r\n        // // }\r\n        // console.log(results.slice(0, 4));\r\n    }\r\n};\r\n\r\nexport default renderGradient;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport renderGradient from \"../js/gradientRenderer\";\r\n\r\nvar worker = new window.Worker(\"./gradientWorker.js\");\r\n\r\nconst Canvas = ({ id, canvasPoints }) => {\r\n    const [points, setPoints] = useState(canvasPoints);\r\n    const [canvas] = useState(useRef(null));\r\n    const draw = (imageData) => {\r\n        var ctx = canvas.current.getContext(\"2d\");\r\n        ctx.putImageData(imageData, 0, 0);\r\n        window.requestAnimationFrame(() => draw(imageData));\r\n    };\r\n    const shootPixel = () => {\r\n        if (!canvas.current.getContext(\"webgl2\")) {\r\n            console.log(\"WebGL2 not available, using CPU.\");\r\n            var ctx = canvas.current.getContext(\"2d\");\r\n            const imageData = ctx.createImageData(\r\n                canvas.current.width,\r\n                canvas.current.height\r\n            );\r\n            var imDataLength = imageData.data.length;\r\n            // Calling worker\r\n            worker.terminate();\r\n            worker = new window.Worker(\"./gradientWorker.js\");\r\n            worker.postMessage({\r\n                imageData: imageData,\r\n                points: points,\r\n                canvas: {\r\n                    width: canvas.current.width,\r\n                    height: canvas.current.height,\r\n                },\r\n            });\r\n            worker.onerror = (err) => {\r\n                console.log(\"error\", err);\r\n            };\r\n            worker.onmessage = (e) => {\r\n                if (imDataLength === e.data.imageData.data.length) {\r\n                    window.requestAnimationFrame(() => draw(e.data.imageData));\r\n                }\r\n            };\r\n        } else {\r\n            window.requestAnimationFrame(() =>\r\n                renderGradient(points, canvas.current)\r\n            );\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        setPoints(canvasPoints);\r\n        shootPixel();\r\n    });\r\n    useEffect(() => {\r\n        if (!canvas.current.getContext(\"webgl2\")) {\r\n            alert(\r\n                \"WebGL not available in this browser/platform. Renders may be slower.\"\r\n            );\r\n        }\r\n    }, []);\r\n    return <canvas id={id} ref={canvas} />;\r\n};\r\n\r\nexport default Canvas;\r\n","import React, { useState, useEffect } from 'react';\r\nimport Points from './components/Points';\r\nimport Canvas from './components/Canvas';\r\nimport { FaPlus, FaMinus, FaUndoAlt, FaRedoAlt } from 'react-icons/fa';\r\nimport { BrowserRouter as Router, useLocation } from 'react-router-dom';\r\n\r\nfunction App() {\r\n    /**\r\n     * @type {boolean} Potential change in the system is stored here.\r\n     * Any function that changes the system changes this, and useEffect looks for this flagged to push to undo. */\r\n    const [potChange, setPotChange] = useState(false);\r\n    const [renderPage, setRenderPage] = useState(false);\r\n    const [url, setUrl] = useState(window.location.origin);\r\n    const location = useLocation();\r\n    /** @type {object} Stores various mouse states */\r\n    const [mouse, setMouse] = useState({\r\n        down: false,\r\n        stateSaved: false,\r\n        clicked: {\r\n            status: false,\r\n            index: undefined,\r\n            obj: undefined,\r\n        },\r\n        showRadius: false,\r\n        active: false,\r\n        resizing: {\r\n            mode: false,\r\n            start: false,\r\n        },\r\n        target: {\r\n            obj: undefined,\r\n            index: undefined,\r\n            initialPosition: {\r\n                x: 0,\r\n                y: 0,\r\n            },\r\n            initialRadius: undefined,\r\n        },\r\n        pos: {\r\n            start: {\r\n                x: 0,\r\n                y: 0,\r\n            },\r\n            middle: {\r\n                x: 0,\r\n                y: 0,\r\n            },\r\n            end: {\r\n                x: 0,\r\n                y: 0,\r\n            },\r\n            getXY: function (from) {\r\n                if (from === 'start') return [this.start.x, this.start.y];\r\n                else if (from === 'middle')\r\n                    return [this.middle.x, this.middle.y];\r\n                else if (from === 'end') return [this.end.x, this.end.y];\r\n            },\r\n        },\r\n    });\r\n    const [view, setView] = useState([]);\r\n    const [undo, setUndo] = useState([]);\r\n    const [redo, setRedo] = useState([]);\r\n    const [undoRedo, setUndoRedo] = useState(false);\r\n    /**\r\n     * Function to convert colour object in RGB to HSL, HSV and Hex reperesentations.\r\n     *\r\n     * @param {object} rgb\r\n     * @return {{rgb:object, hsv:object, hsl:object, hex:object}} Various colour representations.\r\n     */\r\n    const rgbToHslHsvHex = (rgb) => {\r\n        var rgbArr = [rgb.r, rgb.g, rgb.b];\r\n        var M, m, C, hue, V, L, Sv, Sl;\r\n        M = Math.max(...rgbArr);\r\n        m = Math.min(...rgbArr);\r\n        C = M - m;\r\n        // I = (rgbArr[0] + rgbArr[1] + rgbArr[2]) / 3;\r\n        // Hue\r\n        if (C === 0) hue = 0;\r\n        else if (M === rgbArr[0]) hue = ((rgbArr[1] - rgbArr[2]) / C) % 6;\r\n        else if (M === rgbArr[1]) hue = (rgbArr[2] - rgbArr[0]) / C + 2;\r\n        else if (M === rgbArr[2]) hue = (rgbArr[0] - rgbArr[1]) / C + 4;\r\n        hue *= 60;\r\n        // Lightness and Value\r\n        V = M / 255;\r\n        L = (M + m) / (2 * 255);\r\n        // Saturation\r\n        if (V === 0) Sv = 0;\r\n        else Sv = C / (V * 255);\r\n        if (L === 1 || L === 0) Sl = 0;\r\n        else Sl = C / (255 * (1 - Math.abs(2 * L - 1)));\r\n\r\n        hue = ((hue % 360) + 360) % 360;\r\n        let hsv = { h: hue, s: Sv, v: V, a: 1 };\r\n        let hsl = { h: hue, s: Sl, l: L, a: 1 };\r\n        rgb.a = 1;\r\n        let hex = '#';\r\n        for (let i in rgbArr) {\r\n            let colorcode = Math.floor(rgbArr[i]).toString(16);\r\n            hex += '0'.repeat(2 - colorcode.length) + colorcode;\r\n        }\r\n        return { rgb: rgb, hsv: hsv, hsl: hsl, hex: hex };\r\n    };\r\n    /** @type {object} RGB colour object, the default colour at initialization */\r\n    var defaultColour = rgbToHslHsvHex({\r\n        r: Math.random() * 255,\r\n        g: Math.random() * 255,\r\n        b: Math.random() * 255,\r\n    });\r\n    var paramsHash = new URLSearchParams(window.location.search);\r\n    var params = {};\r\n    for (var pair of paramsHash.entries()) {\r\n        // params[pair[0]] = JSON.parse(Buffer.from(pair[1], 'base64').toString());\r\n        try {\r\n            params[pair[0]] = JSON.parse(pair[1]);\r\n        } catch {\r\n            params[pair[0]] = pair[1];\r\n        }\r\n    }\r\n    var initDragIs;\r\n    if ('points' in params) {\r\n        initDragIs = params['points'];\r\n    } else {\r\n        initDragIs = [\r\n            {\r\n                /** @type {React.MutableRefObject} The reference to the `dragItem` DOM item. */\r\n                pointRef: null,\r\n                /** @type {React.MutableRefObject} The reference to the `dragIContainer` DOM item. */\r\n                containerRef: null,\r\n                /** @type {number} The radius of the colour point. */\r\n                radius: 0,\r\n                /** @type {{rgb:object, hsv:object, hsl:object, hex:string}} Various colour representations of the point. */\r\n                colour: defaultColour,\r\n                /** @type {boolean} tells React to show/hide the colour picker. */\r\n                showPicker: false,\r\n                /** @type {{x:number, y:number}} controls the location of the `dragIContainer`, relative to the `outerContainer`. */\r\n                currentXY: { x: 50, y: 50 },\r\n                /** @type {Array} The CSS size of `dragItem`. */\r\n                size: undefined,\r\n                /** @type {Array} The CSS size of `div` inside `dragIContainer`. */\r\n                containerSize: undefined,\r\n            },\r\n        ];\r\n    }\r\n    const [dragIs, setDragIs] = useState(initDragIs);\r\n    /**\r\n     * Function to convert multi-representation colour object to 2x3 array of RGB and HSV representations.\r\n     *\r\n     * @param {{rgb:object, hsv:object, [hsl:object, hex:object]}} obj\r\n     * @return {[Array, Array]} [[h, s, v], [r, g, b]].\r\n     */\r\n    const hsvRgbObjToArr = (obj) => {\r\n        var arr = [\r\n            [0, 0, 0],\r\n            [0, 0, 0],\r\n        ];\r\n        arr[0] = [obj.hsv.h, obj.hsv.s, obj.hsv.v];\r\n        arr[1] = [obj.rgb.r, obj.rgb.g, obj.rgb.b];\r\n        return arr;\r\n    };\r\n    /**\r\n     * Function to convert `DragIs[]` array to `canvasPoints[]` state that the renderer expects.\r\n     *\r\n     * @param {boolean} set Set the canvasPoints state or not?\r\n     * @return {{x, y, colour:object colourArr:Array, radius: number}[]} canvasPoints if not `set`.\r\n     */\r\n    const getCanvasPoints = (set) => {\r\n        let points = new Array(dragIs.length);\r\n        for (let i in dragIs) {\r\n            if (dragIs[i].size) {\r\n                let centre = pointCentre(i);\r\n                points[i] = {\r\n                    x: centre.x,\r\n                    y: centre.y,\r\n                    colour: dragIs[i].colour,\r\n                    colourArr: hsvRgbObjToArr(dragIs[i].colour),\r\n                    radius: dragIs[i].radius,\r\n                };\r\n            }\r\n        }\r\n        if (set) setCanvasPoints(points);\r\n        else return points;\r\n    };\r\n    const [canvasPoints, setCanvasPoints] = useState(false);\r\n    /**\r\n     * Function to add a new DragItem with random colour and position. The function sets the `dragIs[]` state and flags `potChange` at exit.\r\n     */\r\n    const addDragItem = () => {\r\n        var currentXY = { x: 50, y: 50 },\r\n            colour;\r\n        if (dragIs.length > 0) {\r\n            var boundXY = [\r\n                [0, 0],\r\n                [0, 0],\r\n            ];\r\n            boundXY[1] = [\r\n                boundXY[0][0] +\r\n                    dragIs[0].containerRef.current.parentNode.clientWidth -\r\n                    dragIs[0].size[0],\r\n                boundXY[0][1] +\r\n                    dragIs[0].containerRef.current.parentNode.clientHeight -\r\n                    dragIs[0].size[1],\r\n            ];\r\n            let x, y;\r\n            x = Math.floor(Math.random() * boundXY[1][0] + boundXY[0][0]);\r\n            y = Math.floor(Math.random() * boundXY[1][1] + boundXY[0][1]);\r\n            currentXY = { x: x, y: y };\r\n        }\r\n        colour = {\r\n            r: Math.random() * 255,\r\n            g: Math.random() * 255,\r\n            b: Math.random() * 255,\r\n        };\r\n        colour = rgbToHslHsvHex(colour);\r\n        const newDragItem = {\r\n            ref: null,\r\n            containerRef: null,\r\n            radius: 0,\r\n            colour: colour,\r\n            showPicker: false,\r\n            pointerOffset: { x: 0, y: 0 },\r\n            currentXY: currentXY,\r\n            size: undefined,\r\n            containerSize: undefined,\r\n        };\r\n        setDragIs([...dragIs, newDragItem]);\r\n        setPotChange(true);\r\n        setRenderPage(true);\r\n    };\r\n    /**\r\n     * Function to remove the DragItem of specified index. The function sets the `dragIs[]` state and flags `potChange` at exit.\r\n     *\r\n     * @param {number} index the index of the DragItem to be removed.\r\n     */\r\n    const removeDragItem = (index) => {\r\n        if (index === -1) {\r\n            index = dragIs.length - 1;\r\n        }\r\n        console.log('Removing point with key ' + index);\r\n        let newDragIs = dragIs;\r\n        newDragIs.splice(index, 1);\r\n        setDragIs([...newDragIs]);\r\n        setPotChange(true);\r\n        setRenderPage(true);\r\n        console.log('New points are ', dragIs);\r\n    };\r\n    /**\r\n     * Pointer down event handler that enables modification of DragItems.\r\n     *\r\n     * @param {MouseEvent} e The mouse event variable.\r\n     */\r\n    const dragStart = (e) => {\r\n        mouse.down = true; // pointer is down\r\n        mouse.pos.start = getPointerLocation(e); // getting pointer location\r\n\r\n        // acquire pointer target\r\n        mouse.target.obj = document.elementFromPoint(\r\n            ...mouse.pos.getXY('start')\r\n        );\r\n        // index of the target in the dragIs[] array\r\n        var index = getIndex(mouse.target.obj);\r\n        if (index) mouse.target.index = index;\r\n\r\n        // Unhide hideButtons that were hidden previously\r\n        if (!mouse.target.obj.classList.contains('dragItem')) {\r\n            hideButton(false, 0, '0.3s');\r\n        }\r\n\r\n        // moving a point or making it clicked (highlighted)...\r\n        if (\r\n            // if pointerdown on the a dragItem and...\r\n            mouse.target.obj.classList.contains('dragItem') &&\r\n            (!mouse.clicked.status || // if none is clicked, ...\r\n            (mouse.clicked.status && // or clicked item is not pointerdown item...\r\n                mouse.clicked.index !== mouse.target.index) || // or radius is not being modified (or shown).\r\n                !mouse.showRadius)\r\n        ) {\r\n            if (index) {\r\n                // this if is just to catch the error \"dragIs[index] is undefined\" that appears for some fucking reason.\r\n                // save the initial location of the target before it is moved.\r\n                mouse.target.init = {\r\n                    x:\r\n                        dragIs[mouse.target.index].currentXY.x -\r\n                        mouse.pos.start.x,\r\n                    y:\r\n                        dragIs[mouse.target.index].currentXY.y -\r\n                        mouse.pos.start.y,\r\n                };\r\n                mouse.active = true; // set mouse.active to indicate some point is starting to be moved (technically moved is set in drag where the mouse movement is checked to be isClick() or not).\r\n                // set mouse to be active and bring it to top in CSS.\r\n                dragIs[mouse.target.index].tags = { active: true };\r\n                dragIs[\r\n                    mouse.target.index\r\n                ].containerRef.current.style.zIndex = 2;\r\n            }\r\n        }\r\n        // start resizing the clicked (highlighted) point\r\n        else if (\r\n            mouse.clicked.status && // some item is clicked...\r\n            mouse.clicked.index === mouse.target.index && // and clicked item is pointerdown item...\r\n            dragIs[mouse.clicked.index]?.tags?.showRadius // and clicked item is in showRadius mode, not colour picker mode.\r\n        ) {\r\n            mouse.resizing.mode = true; // enable resizing mode, but not start it yet.\r\n            mouse.showRadius = true; // show it's radius\r\n            mouse.target.initialRadius = dragIs[mouse.clicked.index].radius; // set initial radius of the object\r\n        }\r\n        setDragIs([...dragIs]);\r\n        setRenderPage(true);\r\n        setMouse(mouse);\r\n    };\r\n    const drag = (e) => {\r\n        mouse.pos.middle = getPointerLocation(e);\r\n        // if an item is active and the mouse movement is not a click, drag it\r\n        if (mouse.active && !isClick(mouse.pos.start, mouse.pos.middle)) {\r\n            closePoint();\r\n            var index = mouse.target.index;\r\n            if (index) {\r\n                e.preventDefault();\r\n                hideButton(true, 0);\r\n                try {\r\n                    dragIs[index].containerRef.current.style.zIndex = 2; // bringing item to top\r\n                } catch {}\r\n                var currentXY = { x: 0, y: 0 }; // saving the position to a variable (used to bound...)\r\n                currentXY.x = mouse.pos.middle.x + mouse.target.init.x;\r\n                currentXY.y = mouse.pos.middle.y + mouse.target.init.y;\r\n                // finding the bounds of the dragPalette element\r\n                // this is done so that the points stay inside\r\n                // the palette even if cursor is outside\r\n                let boundXY = getBounds(index);\r\n                dragIs[index].currentXY.x = Math.max(\r\n                    Math.min(currentXY.x, boundXY[1][0]),\r\n                    boundXY[0][0]\r\n                );\r\n                dragIs[index].currentXY.y = Math.max(\r\n                    Math.min(currentXY.y, boundXY[1][1]),\r\n                    boundXY[0][1]\r\n                );\r\n            }\r\n        }\r\n        // resizing\r\n        else if (mouse.resizing.mode) {\r\n            if (mouse.clicked.index) {\r\n                let r = dist(pointCentre(mouse.clicked.index), {\r\n                    x: mouse.pos.middle.x - 20,\r\n                    y: mouse.pos.middle.y - 20,\r\n                });\r\n                if (mouse.resizing.start) {\r\n                    dragIs[mouse.clicked.index].radius = Math.max(\r\n                        Math.abs(r) - 25,\r\n                        0\r\n                    );\r\n                } else if (r - 25 >= mouse.target.initialRadius) {\r\n                    dragIs[mouse.clicked.index].tags\r\n                        ? (dragIs[mouse.clicked.index].tags.resizing = true)\r\n                        : (dragIs[mouse.clicked.index].tags = {\r\n                              resizing: true,\r\n                          });\r\n                    mouse.resizing.start = true;\r\n                }\r\n            }\r\n        } else if (mouse.down) {\r\n            dragStart(e);\r\n        }\r\n        setDragIs([...dragIs]);\r\n        if (mouse.down) {\r\n            // console.log(\"mouse is down\");\r\n            setRenderPage(true);\r\n        }\r\n        setMouse(mouse);\r\n    };\r\n    const dragEnd = (e) => {\r\n        // e.preventDefault();\r\n        if (e.type.substr(0, 5) === 'touch') {\r\n            mouse.pos.end = {\r\n                x: e.touches[0].clientX,\r\n                y: e.touches[0].clientY,\r\n            };\r\n        } else {\r\n            mouse.pos.end = { x: e.clientX, y: e.clientY };\r\n        }\r\n        let index = mouse.target.index;\r\n        if (index) {\r\n            let target = document.elementFromPoint(e.clientX, e.clientY);\r\n            // item is clicked, show radius\r\n            if (\r\n                isClick(mouse.pos.start, mouse.pos.end) &&\r\n                (target.classList.contains('dragItem') ||\r\n                    target.classList.contains('dragIWeight'))\r\n            ) {\r\n                try {\r\n                    dragIs[index].containerRef.current.style.zIndex = dragIs[\r\n                        index\r\n                    ].clicked\r\n                        ? 1\r\n                        : 2;\r\n                } catch {}\r\n                if (\r\n                    !mouse.clicked.status ||\r\n                    (mouse.clicked.target && mouse.clicked.target !== target)\r\n                ) {\r\n                    mouse.clicked.status = true;\r\n                    mouse.clicked.target = target;\r\n                    mouse.clicked.index = getIndex(target);\r\n                    closePoint(mouse.clicked.index);\r\n                    mouse.showRadius = true;\r\n                    try {\r\n                        dragIs[mouse.clicked.index].tags = {\r\n                            clicked: true,\r\n                            showRadius: true,\r\n                        };\r\n                    } catch {}\r\n                } else if (\r\n                    mouse.clicked.target &&\r\n                    mouse.clicked.target === target\r\n                ) {\r\n                    mouse.clicked.status = false;\r\n                    closePoint();\r\n                    mouse.clicked.target = undefined;\r\n                    mouse.clicked.index = undefined;\r\n                }\r\n            } else if (mouse.resizing.start) {\r\n                delete dragIs[index].tags.resizing;\r\n            } else if (mouse.active) {\r\n                hideButton(false);\r\n                closePoint();\r\n                mouse.active = false;\r\n                try {\r\n                    dragIs[index].containerRef.current.style.zIndex = 1;\r\n                } catch {}\r\n            }\r\n            mouse.down = false;\r\n            mouse.active = false;\r\n            mouse.resizing.mode = false;\r\n            mouse.resizing.start = false;\r\n            setDragIs([...dragIs]);\r\n            setMouse(mouse);\r\n        } else {\r\n            mouse.down = false;\r\n            setDragIs([...dragIs]);\r\n        }\r\n        setPotChange(true);\r\n        setRenderPage(true);\r\n    };\r\n    const getIndex = (obj) => {\r\n        for (let i in dragIs) {\r\n            if (dragIs[i].pointRef.current === obj) {\r\n                return i;\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    const getPointerLocation = (e) => {\r\n        let position = { x: undefined, y: undefined };\r\n        if (e.type.substr(0, 5) === 'touch') {\r\n            position = {\r\n                x: e.touches[0].clientX,\r\n                y: e.touches[0].clientY,\r\n            };\r\n        } else {\r\n            position = { x: e.clientX, y: e.clientY };\r\n        }\r\n        return position;\r\n    };\r\n    async function hideButton(state, timeout, animTime) {\r\n        if (!state && timeout === undefined) timeout = 700;\r\n        if (animTime === undefined) {\r\n            if (state) animTime = '0.15s';\r\n            else animTime = '1s';\r\n        }\r\n        setTimeout(() => {\r\n            let undoButton = document.getElementsByClassName('hideButton');\r\n            for (let k in undoButton) {\r\n                if (undoButton[k].classList)\r\n                    if (state) {\r\n                        undoButton[k].classList.add('hidden');\r\n                        undoButton[\r\n                            k\r\n                        ].style.transition = `all 0.5s cubic-bezier(0.39, 0.58, 0.57, 1), opacity ${animTime} ease-in-out`;\r\n                    } else {\r\n                        undoButton[k].classList.remove('hidden');\r\n                        undoButton[\r\n                            k\r\n                        ].style.transition = `all 0.5s cubic-bezier(0.39, 0.58, 0.57, 1), opacity ${animTime} ease-in-out`;\r\n                    }\r\n            }\r\n        }, timeout);\r\n    }\r\n    const pointCentre = (index) => {\r\n        let centre = {\r\n            x: dragIs[index].currentXY.x + dragIs[index].containerSize[0] / 2,\r\n            y: dragIs[index].currentXY.y + dragIs[index].containerSize[1] / 2,\r\n        };\r\n        return centre;\r\n    };\r\n    const getBounds = (index) => {\r\n        let boundXY = [\r\n            [\r\n                -(dragIs[index].containerSize[0] - dragIs[index].size[0]) / 2,\r\n                -(dragIs[index].containerSize[1] - dragIs[index].size[1]) / 2,\r\n            ], // min X, Y\r\n            [0, 0], // max X, Y\r\n        ];\r\n        boundXY[1] = [\r\n            boundXY[0][0] +\r\n                dragIs[index].containerRef.current.parentNode.clientWidth -\r\n                dragIs[index].size[0], // (- size) because anchor is at top left\r\n            boundXY[0][1] +\r\n                dragIs[index].containerRef.current.parentNode.clientHeight -\r\n                dragIs[index].size[1],\r\n        ];\r\n        return boundXY;\r\n    };\r\n    const closePoint = (index = undefined) => {\r\n        !index && (mouse.clicked.status = false);\r\n        for (let i in dragIs) {\r\n            if (index === i) {\r\n                continue;\r\n            }\r\n            if (dragIs[i].tags) delete dragIs[i].tags;\r\n            dragIs[i].containerRef.current.style.zIndex = 1;\r\n        }\r\n        setDragIs(dragIs);\r\n    };\r\n    const pushNewURL = ({ state = dragIs, push = true } = {}) => {\r\n        // var url_query =\r\n        //     window.location.origin +\r\n        //     '/?points=' +\r\n        //     Buffer.from(JSON.stringify(removeDOMItems(state))).toString(\r\n        //         'base64'\r\n        //     );\r\n        var url_query =\r\n            window.location.origin +\r\n            '/?points=' +\r\n            JSON.stringify(removeDOMItems(state));\r\n        if (url !== url_query) console.log(url_query);\r\n        if (push) window.history.pushState(null, null, url_query);\r\n        else window.history.replaceState(null, null, url_query);\r\n        setUrl(url_query);\r\n    };\r\n    const dist = (p1, p2) => {\r\n        return Math.sqrt(Math.pow(p1.x - p2.x, 2) + Math.pow(p1.y - p2.y, 2));\r\n    };\r\n    const isClick = (startXY, endXY) => {\r\n        let tol = 5;\r\n        let value = dist(endXY, startXY);\r\n        return value <= tol;\r\n    };\r\n    const updateSizes = () => {\r\n        let update = false;\r\n        for (let i in dragIs) {\r\n            if (!dragIs[i].size) {\r\n                update = true;\r\n                dragIs[i].size = [\r\n                    dragIs[i].pointRef.current.offsetWidth,\r\n                    dragIs[i].pointRef.current.offsetHeight,\r\n                ];\r\n                dragIs[i].containerSize = [\r\n                    dragIs[i].pointRef.current.parentNode.parentNode\r\n                        .offsetWidth,\r\n                    dragIs[i].pointRef.current.parentNode.parentNode\r\n                        .offsetHeight,\r\n                ];\r\n            }\r\n        }\r\n        if (update) setDragIs(dragIs);\r\n    };\r\n    const onChangeColor = (index, color, finish = false) => {\r\n        let newDragIs = [...dragIs];\r\n        newDragIs[index].colour = color;\r\n        setDragIs([...newDragIs]);\r\n        setRenderPage(true);\r\n        if (finish) setPotChange(true);\r\n    };\r\n    const pushToView = (state, dontCopyToRedo = false) => {\r\n        if (dontCopyToRedo) {\r\n            let newView = copyDragIs(state);\r\n            setView(newView);\r\n        } else if (differentState(state, view)) {\r\n            setUndo([...undo, view]);\r\n            setRedo([]);\r\n            let newView = copyDragIs(state);\r\n            setView(newView);\r\n            pushNewURL(state);\r\n        }\r\n    };\r\n    const differentState = (newState, oldState) => {\r\n        let diff =\r\n            JSON.stringify(removeDOMItems(newState)) !=\r\n            JSON.stringify(removeDOMItems(oldState));\r\n        return (\r\n            JSON.stringify(removeDOMItems(newState)) !=\r\n            JSON.stringify(removeDOMItems(oldState))\r\n        );\r\n    };\r\n    const copyDragIs = (state) => {\r\n        let copyState = JSON.parse(JSON.stringify(removeDOMItems(state)));\r\n        return copyState;\r\n    };\r\n    const removeDOMItems = (state) => {\r\n        let minimalState = [];\r\n        for (let i in state) {\r\n            let item = { ...state[i] };\r\n            try {\r\n                item.pointRef = undefined;\r\n                item.containerRef = undefined;\r\n                delete item.tags;\r\n            } catch (error) {\r\n                console.error('Error in removing DOM elements.', error);\r\n            }\r\n            minimalState.push(item);\r\n        }\r\n        return minimalState;\r\n    };\r\n    const onPickerButton = (index) => {\r\n        if (dragIs[index].tags) {\r\n            if (dragIs[index].tags.showPicker) {\r\n                delete dragIs[index].tags.showPicker;\r\n                dragIs[index].tags.showRadius = true;\r\n                mouse.showRadius = true;\r\n            } else {\r\n                dragIs[index].tags.showPicker = true;\r\n                delete dragIs[index].tags.showRadius;\r\n                mouse.showRadius = false;\r\n            }\r\n        } else dragIs[index].tags = { showPicker: true };\r\n        setDragIs([...dragIs]);\r\n    };\r\n    const undoRedoClicked = (action) => {\r\n        if (action === 'undo' && undo.length) {\r\n            setRedo([...redo, view]);\r\n            setDragIs(undo[undo.length - 1]);\r\n            setUndo(undo.slice(0, undo.length - 1));\r\n            setUndoRedo(true);\r\n            setPotChange(true);\r\n            setRenderPage(true);\r\n        } else if (action === 'redo' && redo.length) {\r\n            setUndo([...undo, view]);\r\n            setDragIs(redo[redo.length - 1]);\r\n            setRedo(redo.slice(0, redo.length - 1));\r\n            setUndoRedo(true);\r\n            setPotChange(true);\r\n            setRenderPage(true);\r\n        }\r\n        mouse.down = false;\r\n        pushNewURL();\r\n    };\r\n    useEffect(() => {\r\n        if (renderPage) {\r\n            try {\r\n                getCanvasPoints(true);\r\n                setRenderPage(false);\r\n            } catch (err) {\r\n                console.error('Error in rendering page.', err);\r\n            }\r\n        }\r\n        if (potChange) {\r\n            pushToView(dragIs, undoRedo);\r\n            if (undoRedo) setUndoRedo(false);\r\n            setPotChange(false);\r\n        }\r\n    }, [renderPage]);\r\n    useEffect(() => {\r\n        var paramsHash = new URLSearchParams(window.location.search);\r\n        var params = {};\r\n        for (var pair of paramsHash.entries()) {\r\n            // params[pair[0]] = JSON.parse(\r\n            //     Buffer.from(pair[1], 'base64').toString()\r\n            // );\r\n            params[pair[0]] = JSON.parse(pair[1]);\r\n        }\r\n        if ('points' in params) {\r\n            setDragIs([...params['points']]);\r\n            setUndo([...undo, view]);\r\n            setRedo([]);\r\n            let newView = copyDragIs(params['points']);\r\n            setView(newView);\r\n            setUndoRedo(true);\r\n            setPotChange(true);\r\n            setRenderPage(true);\r\n        }\r\n    }, [location]);\r\n    useEffect(() => {\r\n        getCanvasPoints(true);\r\n        setRenderPage(false);\r\n        pushToView(dragIs, true);\r\n        setPotChange(false);\r\n        hideButton(false, 500);\r\n        if (!('points' in params)) pushNewURL({ push: false });\r\n    }, []);\r\n    return (\r\n        <div\r\n            className=\"App\"\r\n            onPointerDown={(e) => dragStart(e)}\r\n            onPointerMove={(e) => drag(e)}\r\n            onPointerUp={(e) => dragEnd(e)}\r\n        >\r\n            <div id=\"outerContainer\">\r\n                <div id=\"dragPalette\">\r\n                    <Canvas\r\n                        id={'gradientPalette'}\r\n                        canvasPoints={canvasPoints}\r\n                    />\r\n                </div>\r\n                <Points\r\n                    points={dragIs}\r\n                    onRender={updateSizes}\r\n                    onChangeColor={onChangeColor}\r\n                    onPickerButton={onPickerButton}\r\n                />\r\n                <div id=\"point-manager\">\r\n                    <button\r\n                        className=\"button plus hideButton hidden\"\r\n                        onClick={addDragItem}\r\n                    >\r\n                        <FaPlus />\r\n                    </button>\r\n                    <button\r\n                        className=\"button minus hideButton hidden\"\r\n                        onClick={() => removeDragItem(-1)}\r\n                    >\r\n                        <FaMinus />\r\n                    </button>\r\n                </div>\r\n                <div id=\"undo\" className=\"undo-redo undoButton\">\r\n                    <button\r\n                        className=\"button hideButton hidden\"\r\n                        onClick={() => {\r\n                            undoRedoClicked('undo');\r\n                        }}\r\n                    >\r\n                        <FaUndoAlt className=\"undoButton\" />\r\n                    </button>\r\n                </div>\r\n                <div id=\"redo\" className=\"undo-redo\">\r\n                    <button\r\n                        className=\"button hideButton hidden\"\r\n                        onClick={() => {\r\n                            undoRedoClicked('redo');\r\n                        }}\r\n                    >\r\n                        <FaRedoAlt />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport './css/style.css';\r\nimport './css/dragPalette.css';\r\nimport './css/pointManager.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}